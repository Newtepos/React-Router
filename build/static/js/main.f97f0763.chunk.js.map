{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/pages/NotFound.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/hooks/use-http.js","components/lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","components/pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","components/pages/QuoteDetail.js","App.js","index.js"],"names":["module","exports","NotFound","className","MainNavigation","classes","header","logo","nav","to","activeClassName","active","Layout","props","main","children","QuoteItem","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","a","b","sorting","onClick","push","pathname","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","useEffect","length","Card","card","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","onFocus","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","addCommentDone","submitFormHandler","enteredComment","alert","quoteID","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","loadedComments","useParams","addCommentHandler","HighlightedQuote","QuoteDetail","route","useRouteMatch","path","exact","url","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f97f0763.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","const NotFound = () => {\n  return (\n    <div className=\"centered\">\n      <p>Page not found!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { NavLink } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\n              Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation\n","import { Fragment } from \"react\";\nimport MainNavigation from \"./MainNavigation\";\nimport classes from \"./Layout.module.css\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortingQuote = (quotes, ascending) => {\n  return quotes.sort((a, b) => {\n    if (ascending) {\n      return a.id > b.id ? 1 : -1;\n    } else {\n      return a.id > b.id ? -1 : 1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParam = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParam.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortingQuote(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push(\n      `${location.pathname}?sort=${isSortingAscending ? \"desc\" : \"asc\"}`\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          {isSortingAscending ? \"Sort Descending\" : \"Sort Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-efc44-default-rtdb.asia-southeast1.firebasedatabase.app/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to='/new-quote' className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport NoQuotesFound from \"../quotes/NoQuotesFound\";\n\nconst DUMMY_QUOTES = [\n  {\n    id: 1,\n    author: \"Supakit\",\n    text: \"Learning React is super fun!\",\n  },\n  {\n    id: 2,\n    author: \"Supakit\",\n    text: \"Learning React is super great!\",\n  },\n];\n\nconst AllQuotes = () => {\n  const { sendRequest, data, status} = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest])\n\n  if(status === 'pending') {\n      return (\n          <div className='centered'>\n              <LoadingSpinner/>\n          </div>\n      )\n  } \n\n  if(status === 'completed' && (!data || data.length === 0)) {\n      return <NoQuotesFound></NoQuotesFound>\n  }\n\n  return <QuoteList quotes={data}></QuoteList>;\n};\n\nexport default AllQuotes;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, Fragment, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { Prompt } from \"react-router\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const focusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const enterHandler = () => {\n    setIsEntering(false);\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message=\"Are you sure you want to leave?\" />\n      <Card>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n          onFocus={focusHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" onClick={enterHandler}>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../quotes/QuoteForm\";\nimport { useHistory } from \"react-router\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\n\nconst NewQuote = () => {\n  const history = useHistory();\n\n  const { sendRequest, status } = useHttp(addQuote);\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [history, status]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n  return <QuoteForm onAddQuote={addQuoteHandler}></QuoteForm>;\n};\n\nexport default NewQuote;\n","import { useEffect, useRef } from \"react\";\n\nimport classes from \"./NewCommentForm.module.css\";\nimport { addComment } from \"../lib/api.js\";\nimport useHttp from \"../hooks/use-http.js\";\nimport { useParams } from \"react-router\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status } = useHttp(addComment);\n\n  const {addCommentDone} = props;\n\n  useEffect(() => {\n    if (status === 'completed') {\n      addCommentDone();\n    }\n  }, [status, addCommentDone]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredComment = commentTextRef.current.value;\n\n    if(enteredComment.length === 0) {\n      return alert(\"Please insert comment\");\n    }\n\n    sendRequest({\n      commentData: { text: enteredComment },\n      quoteId: props.quoteID,\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { Fragment, useCallback, useEffect, useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { useParams } from \"react-router\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  let comment;\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const hideCommentHandler = () => {\n    setIsAddingComment(false);\n  };\n\n  const { quoteID } = useParams();\n\n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n\n  if (status === \"completed\" && loadedComments) {\n    comment = <CommentsList comments={loadedComments}></CommentsList>;\n  }\n\n  if (status === \"completed\" && (!loadedComments || loadedComments.length === 0 )) {\n    comment = <p>No Comment</p>;\n  }\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <Fragment>\n          <NewCommentForm\n            quoteID={quoteID}\n            addCommentDone={addCommentHandler}\n          />\n        </Fragment>\n      )}\n      {comment}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\nimport { Route, useParams } from \"react-router\";\nimport Comments from \"../comments/Comments\";\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\n// const DUMMY_QUOTES = [\n//   {\n//     id: 1,\n//     author: \"Supakit\",\n//     text: \"Learning React is super fun!\",\n//   },\n//   {\n//     id: 2,\n//     author: \"Supakit\",\n//     text: \"Learning React is super great!\",\n//   },\n// ];\n\nconst QuoteDetail = () => {\n  const { quoteID } = useParams();\n  const route = useRouteMatch();\n\n  const {\n    sendRequest,\n    data: quote,\n    status,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  //   const quote = DUMMY_QUOTES.find((quotes) => quotes.id === parseInt(quoteID));\n\n  useEffect(() => {\n    sendRequest(quoteID);\n  }, [sendRequest, quoteID]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <div className=\"centered\">{error}</div>;\n  }\n  if (!quote) {\n    return <p>No Quote Found</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote\n        text={quote.text}\n        author={quote.author}\n      ></HighlightedQuote>\n      <Route path={`${route.path}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${route.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${route.path}/comments`}>\n        <Comments></Comments>\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n","import NotFound from './components/pages/NotFound'\nimport { Switch, Route, Redirect } from \"react-router\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuotes from \"./components/pages/AllQuotes\";\nimport NewQuote from \"./components/pages/NewQuote\";\nimport QuoteDetail from \"./components/pages/QuoteDetail\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes></AllQuotes>\n        </Route>\n        <Route path=\"/quotes/:quoteID\">\n          <QuoteDetail></QuoteDetail>\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote></NewQuote>\n        </Route>\n        <Route path=\"*\">\n          <NotFound></NotFound>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}